---
- name: Resets the data for microservices
  hosts: localhost
  vars_files: 
    - vars.yml
  tasks:
     
    - name: Checkout source code from Github for db schemas
      git:
        repo: "https://github.com/Estafet-LTD/{{ item.repo }}"
        dest: "{{ workdir }}/{{ item.repo }}"
        update: yes
      when: "{{ item.db }}"
      with_items: "{{ microservices_scrum_projects }}"
      when: "{{ clone_modules }}"
      tags:
        - git     
     
    - name: Login in Openshift
      shell: "oc login --insecure-skip-tls-verify=true -u {{ username }} -p {{ password }} {{ openshift }}"
      tags:
        - openshift    

    - include: postgres-vars.yml

    - name: Copy ddl to PostgreSQL Pod
      shell: 'oc rsync --no-perms=true --include="*.ddl" --exclude="*" {{ workdir }}/{{ item.repo }}/ {{db_pod}}:/tmp'
      register: command_result
      when: "{{ item.db }}"
      with_items: "{{ microservices_scrum_projects }}"
      failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
      changed_when: "'exists' not in command_result.stderr"
      tags:
        - openshift
        - postgresql

    - name: Execute Drop ddl on PostgreSQL Pod
      shell: 'oc exec {{db_pod}} -- /bin/sh -i -c "psql -d {{ item.name }} -U postgres -f /tmp/{{ item.drop_ddl }}"'
      register: command_result
      when: "{{ item.db }}"
      with_items: "{{ microservices_scrum_projects }}"
      failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
      changed_when: "'exists' not in command_result.stderr"
      tags:
        - openshift
        - postgresql

    - name: Execute Create ddl on PostgreSQL Pod
      shell: 'oc exec {{db_pod}} -- /bin/sh -i -c "psql -d {{ item.name }} -U postgres -f /tmp/{{ item.create_ddl }}"'
      register: command_result
      when: "{{ item.db }}"
      with_items: "{{ microservices_scrum_projects }}"
      failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
      changed_when: "'exists' not in command_result.stderr"
      tags:
        - openshift
        - postgresql
      
    - name: Redeploy all of the applications that have databases
      shell: "oc deploy {{ item.name }} --latest && sleep 5"
      register: command_result
      when: "{{ item.db }}"
      with_items: "{{ microservices_scrum_projects }}"      
      failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
      changed_when: "'exists' not in command_result.stderr"
      tags:
        - openshift           

            