node("maven") {

	stage("checkout") {
		git branch: "master", url: "https://github.com/Estafet-LTD/estafet-microservices-scrum-api-project"
	}

	stage("build and execute unit tests") {
		sh "mvn clean test"
		junit "**/target/surefire-reports/*.xml"
	}

	stage("update the database schema") {
		sh "oc get pods --selector app=postgresql -o json > pods.json"
		pod = new JsonSlurper().parseText(new File("pods.json").text).items[0].metadata.name
		sh "oc rsync --no-perms=true --include="*.ddl" --exclude="*" ./ ${pod}:/tmp"
		sh 'oc exec {{db_pod}} -- /bin/sh -i -c "psql -d project-api -U postgres -f /tmp/drop-project-api-db.ddl"'
		sh 'oc exec {{db_pod}} -- /bin/sh -i -c "psql -d project-api -U postgres -f /tmp/create-project-api-db.ddl"'
	}

	stage("build & deploy container") {
		openshiftBuild namespace: "microservices-scrum", buildConfig: "project-api", showBuildLogs: "true",  waitTime: "3000000"
	}
  	  
	stage("verify container deployment") {
		openshiftVerifyDeployment namespace: "microservices-scrum", depCfg: "project-api", replicaCount:"1", verifyReplicaCount: "true", waitTime: "300000"	
	}

	stage("execute the container tests") {
		withEnv(
			[	"PROJECT_API_JDBC_URL=jdbc:postgresql://postgresql.microservices-scrum.svc:5432/project-api", 
				"PROJECT_API_DB_USER=postgres", 
				"PROJECT_API_DB_PASSWORD=welcome1",
				"PROJECT_API_SERVICE_URI=http://project-api.microservices-scrum.svc:8080",
				"JBOSS_A_MQ_BROKER_URL=tcp://broker-amq-tcp.microservices-scrum.svc:61616",
				"JBOSS_A_MQ_BROKER_USER=usertD2",
				"JBOSS_A_MQ_BROKER_PASSWORD=ymd4gcfl"
			]) {
			sh "mvn verify -P integration-test"
		}
		junit "**/target/failsafe-reports/*.xml"
	}

}

