apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  labels:
    app: project-api
  name: project-api
  namespace: test
spec:
  replicas: 1
  selector:
    app: project-api
    deploymentconfig: project-api
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        app: project-api
        deploymentconfig: project-api
    spec:
      containers:
        - env:
            - name: JBOSS_A_MQ_BROKER_PASSWORD
              value: amq
            - name: JBOSS_A_MQ_BROKER_URL
              value: 'tcp://broker-amq-tcp.test.svc:61616'
            - name: JBOSS_A_MQ_BROKER_USER
              value: amq
            - name: PROJECT_API_DB_PASSWORD
              value: welcome1
            - name: PROJECT_API_DB_USER
              value: postgres
            - name: PROJECT_API_JDBC_URL
              value: 'jdbc:postgresql://postgresql.test.svc:5432/project-api'
            - name: JAEGER_SAMPLER_TYPE
              value: const
            - name: JAEGER_SAMPLER_PARAM
              value: 1
            - name: JAEGER_SAMPLER_MANAGER_HOST_PORT
              value: jaeger-agent.test.svc:5778
            - name: JAEGER_AGENT_HOST
              value: jaeger-agent.test.svc
          imagePullPolicy: Always
          name: project-api
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 150Mi
            requests:
              cpu: 50m
              memory: 50Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30